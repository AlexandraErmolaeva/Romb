// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Romb.Application;

#nullable disable

namespace Romb.Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Romb.Application.Entities.ActualEventEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("ActualCofinanceRate")
                        .HasColumnType("decimal(19,15)")
                        .HasColumnName("actual_cofinance_rate");

                    b.Property<decimal>("ActualLocalBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("actual_local_budget");

                    b.Property<decimal>("ActualRegionalBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("actual_regional_budget");

                    b.Property<decimal>("CompletedWorksBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("completed_works_budget");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long>("PlannedEventId")
                        .HasColumnType("bigint")
                        .HasColumnName("planned_event_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("PlannedEventId")
                        .IsUnique();

                    b.ToTable("actual_events", (string)null);
                });

            modelBuilder.Entity("Romb.Application.Entities.PlannedEventEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActualCalculated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actual_calculated");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("PlannedCofinanceRate")
                        .HasColumnType("decimal(19,15)")
                        .HasColumnName("planned_cofinance_rate");

                    b.Property<decimal>("PlannedLocalBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("planned_local_budget");

                    b.Property<decimal>("PlannedRegionalBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("planned_regional_budget");

                    b.Property<string>("TargetCode")
                        .HasColumnType("text")
                        .HasColumnName("target_code");

                    b.Property<decimal>("TotalBudget")
                        .HasColumnType("decimal(50,15)")
                        .HasColumnName("total_budget");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("planned_events", (string)null);
                });

            modelBuilder.Entity("Romb.Application.Entities.ActualEventEntity", b =>
                {
                    b.HasOne("Romb.Application.Entities.PlannedEventEntity", "PlannedEvent")
                        .WithOne()
                        .HasForeignKey("Romb.Application.Entities.ActualEventEntity", "PlannedEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlannedEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
