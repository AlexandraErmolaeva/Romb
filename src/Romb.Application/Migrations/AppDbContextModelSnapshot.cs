// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Romb.Application;

#nullable disable

namespace Romb.Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Romb.Application.Entities.EventEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("CofinanceRate")
                        .HasColumnType("cofinance_rate");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("created_at");

                    b.Property<decimal>("LocalBudget")
                        .HasColumnType("local_budget");

                    b.Property<string>("Name")
                        .HasColumnType("name");

                    b.Property<decimal>("RegionalBudget")
                        .HasColumnType("regional_budget");

                    b.Property<decimal>("TotalBudget")
                        .HasColumnType("total_budget");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("updated_at");

                    b.HasKey("Id");

                    b.ToTable("events", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
